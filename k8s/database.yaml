apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pg-pv-claim
  labels:
    app: pg-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-cm
data:
  init.sql: |
    CREATE TABLE PERSON (
      PERSON SERIAL PRIMARY KEY,
      EMAIL TEXT UNIQUE NOT NULL,
      PASSWORD TEXT NOT NULL,
      PERSON_TOKEN TEXT NOT NULL,
      FIRST_NAME TEXT NOT NULL,
      LAST_NAME TEXT NOT NULL,
      ADD_DATE DATE DEFAULT CURRENT_TIMESTAMP,
      MOD_DATE DATE
    );

    -- CATEGORY CREATION
    CREATE TABLE CATEGORY (
      CATEGORY SERIAL PRIMARY KEY,
      PERSON SERIAL NOT NULL REFERENCES PERSON(PERSON),
      NAME TEXT NOT NULL,
      DESCRIPTION TEXT NOT NULL,
      ADD_DATE DATE DEFAULT CURRENT_TIMESTAMP,
      MOD_DATE DATE
    );

    -- CREATE FUNCTION
    CREATE OR REPLACE FUNCTION API_TOKEN (PSECRET TEXT) 
        RETURNS SETOF TEXT 
    AS $$
    BEGIN
        RETURN QUERY SELECT MD5(PSECRET);
    END; $$ 

    LANGUAGE 'plpgsql';
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-db
spec:
  selector:
    matchLabels:
      app: pg-db
  template:
    metadata:
      labels:
        app: pg-db
    spec:
      volumes:
      - name: pg-persistent-storage
        persistentVolumeClaim:
          claimName: pg-pv-claim
      - name: pg-cm-storage
        configMap:
          name: pg-cm
      containers:
      - name: pg-db
        image: postgres:14.5
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pg-secrets
                key: password
          - name: PGDATA
            value: "/var/lib/postgresql/data/pgdata"
        resources:
          limits:
            memory: "512Mi"
            cpu: "512m"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: pg-persistent-storage
          mountPath: /var/lib/postgresql/data
        - name: pg-cm-storage
          mountPath: /docker-entrypoint-initdb.d
---
apiVersion: v1
kind: Service
metadata:
  name: pg-service
spec:
  type: ClusterIP
  selector:
    app: pg-db
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: Secret
metadata:
  name: pg-secrets
type: Opaque
data:
  password: bXlwYXNz
